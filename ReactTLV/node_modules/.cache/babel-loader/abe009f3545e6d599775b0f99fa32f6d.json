{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development-T410\\\\WEB API + Angular 8 + React\\\\Code\\\\TLV-React-WEB-API\\\\ReactTLV\\\\src\\\\components\\\\Contact.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddContactModal } from './AddContactModal';\nimport { EditContactModal } from './EditContactModal';\nimport { MDBCol, MDBFormInline, MDBIcon, MDBInput } from \"mdbreact\";\nexport class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        filteredString: event.target.value\n      });\n    };\n\n    this.state = {\n      contacts: [],\n      addModalShow: false,\n      editModalShow: false,\n      filteredString: ''\n    };\n    this.refreshList = this.refreshList.bind(this);\n  }\n\n  refreshList() {\n    fetch('http://localhost:54178/api/contact/').then(response => response.json()).then(data => {\n      this.setState({\n        contacts: data\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.refreshList();\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  deleteEmp(contact_id) {\n    if (window.confirm('Are You Sure you want to delete this person ?')) {\n      fetch('http://localhost:54178/api/contact/' + contact_id, {\n        method: 'DELETE',\n        header: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }\n\n  getPersonDesc(personType, people_list) {\n    for (var index in people_list) {\n      var obj = people_list[index];\n\n      if (Number(obj.PersonType) === personType) {\n        return obj.PersonDescription;\n      }\n    }\n\n    return '';\n  }\n\n  render() {\n    const _this$state = this.state,\n          _contactid = _this$state._contactid,\n          _firstname = _this$state._firstname,\n          _lastname = _this$state._lastname,\n          _contacttypedesc = _this$state._contacttypedesc,\n          _phonenumber = _this$state._phonenumber,\n          _email = _this$state._email,\n          _disablefields = _this$state._disablefields,\n          _graduationyear = _this$state._graduationyear,\n          _subject = _this$state._subject,\n          _faculty = _this$state._faculty;\n\n    let addModalClose = () => this.setState({\n      addModalShow: false\n    });\n\n    let editModalClose = () => {\n      this.setState({\n        editModalShow: false\n      });\n      this.refreshList();\n    };\n\n    const _this$state2 = this.state,\n          filteredString = _this$state2.filteredString,\n          contacts = _this$state2.contacts;\n    const lowercasedFilter = filteredString.toLowerCase();\n    const filteredData = contacts.filter(item => {\n      return Object.keys(item).some(key => typeof item[key] === \"string\" && item[key].toLowerCase().includes(lowercasedFilter));\n    });\n    const people_list = [{\n      PersonType: '1',\n      PersonDescription: 'Student'\n    }, {\n      PersonType: '2',\n      PersonDescription: 'Alumni'\n    }, {\n      PersonType: '3',\n      PersonDescription: 'Lecturer'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"mt-4\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"ContactID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"FirstName\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"LastName\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"ContactType\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"PhoneNumber\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Options\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, filteredData.map(_cntct => React.createElement(\"tr\", {\n      key: _cntct.ContactID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, _cntct.ContactID), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, _cntct.FirstName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, _cntct.LastName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.getPersonDesc(_cntct.ContactType, people_list)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, _cntct.PhoneNumber), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, _cntct.Email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mr-2\",\n      variant: \"dark\",\n      onClick: () => this.setState({\n        editModalShow: true,\n        _contactid: _cntct.ContactID,\n        _firstname: _cntct.FirstName,\n        _lastname: _cntct.LastName,\n        _contacttypedesc: this.getPersonDesc(_cntct.ContactType, people_list),\n        _phonenumber: _cntct.PhoneNumber,\n        _email: _cntct.Email,\n        _disablefields: true,\n        _faculty: _cntct.Faculty,\n        _subject: _cntct.Subject,\n        _graduationyear: _cntct.GraduationYear // we need to pass the params above , below\n\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"View\"), React.createElement(Button, {\n      className: \"mr-2\",\n      variant: \"info\",\n      onClick: () => this.setState({\n        editModalShow: true,\n        _contactid: _cntct.ContactID,\n        _firstname: _cntct.FirstName,\n        _lastname: _cntct.LastName,\n        _contacttypedesc: this.getPersonDesc(_cntct.ContactType, people_list),\n        _phonenumber: _cntct.PhoneNumber,\n        _email: _cntct.Email,\n        _disablefields: 'false',\n        _faculty: _cntct.Faculty,\n        _subject: _cntct.Subject,\n        _graduationyear: _cntct.GraduationYear // we need to pass the params above , below\n\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Button, {\n      className: \"mr-2\",\n      onClick: () => this.deleteEmp(_cntct.ContactID),\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(EditContactModal, {\n      show: this.state.editModalShow,\n      onHide: editModalClose,\n      contactid: _contactid,\n      firstname: _firstname,\n      lastname: _lastname,\n      contacttype: _contacttypedesc,\n      phonenumber: _phonenumber,\n      email: _email,\n      disablefields: _disablefields,\n      graduationyear: _graduationyear,\n      subject: _subject,\n      faculty: _faculty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))))))), React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        addModalShow: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Add Contact\"), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(MDBFormInline, {\n      className: \"md-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.filteredString,\n      onChange: this.handleChange,\n      className: \"form-control form-control-sm w-75\",\n      type: \"text\",\n      placeholder: \"Search for anything\",\n      \"aria-label\": \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))), React.createElement(AddContactModal, {\n      show: this.state.addModalShow,\n      onHide: addModalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Development-T410\\WEB API + Angular 8 + React\\Code\\TLV-React-WEB-API\\ReactTLV\\src\\components\\Contact.js"],"names":["React","Component","Table","Button","ButtonToolbar","AddContactModal","EditContactModal","MDBCol","MDBFormInline","MDBIcon","MDBInput","Contact","constructor","props","handleChange","event","setState","filteredString","target","value","state","contacts","addModalShow","editModalShow","refreshList","bind","fetch","then","response","json","data","componentWillMount","componentDidUpdate","prevProps","prevState","deleteEmp","contact_id","window","confirm","method","header","Accept","getPersonDesc","personType","people_list","index","obj","Number","PersonType","PersonDescription","render","_contactid","_firstname","_lastname","_contacttypedesc","_phonenumber","_email","_disablefields","_graduationyear","_subject","_faculty","addModalClose","editModalClose","lowercasedFilter","toLowerCase","filteredData","filter","item","Object","keys","some","key","includes","map","_cntct","ContactID","FirstName","LastName","ContactType","PhoneNumber","Email","Faculty","Subject","GraduationYear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddContactModal } from './AddContactModal';\r\nimport { EditContactModal } from './EditContactModal';\r\nimport { MDBCol, MDBFormInline, MDBIcon  , MDBInput} from \"mdbreact\";\r\n\r\nexport class Contact extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { contacts: [], addModalShow: false, editModalShow: false , filteredString: ''};\r\n    this.refreshList = this.refreshList.bind(this);    \r\n  }\r\n\r\n  refreshList() {\r\n    fetch('http://localhost:54178/api/contact/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ contacts: data });\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.refreshList();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n\r\n  }\r\n\r\n  deleteEmp(contact_id) {\r\n    if (window.confirm('Are You Sure you want to delete this person ?')) {\r\n      fetch('http://localhost:54178/api/contact/' + contact_id, {\r\n        method: 'DELETE',\r\n        header: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPersonDesc(personType, people_list) {\r\n    for (var index in people_list) {\r\n      var obj = people_list[index];\r\n      if (Number(obj.PersonType) === personType) {\r\n        return obj.PersonDescription;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  render() {\r\n    \r\n    const {      \r\n      _contactid,\r\n      _firstname,\r\n      _lastname,\r\n      _contacttypedesc,\r\n      _phonenumber,\r\n      _email,\r\n      _disablefields , \r\n      _graduationyear , _subject , _faculty\r\n\r\n    } = this.state;\r\n    let addModalClose = () => this.setState({ addModalShow: false });\r\n    let editModalClose = () => {\r\n      \r\n      this.setState({ editModalShow: false })\r\n      this.refreshList();  \r\n  \r\n    };\r\n\r\n\r\n    const { filteredString, contacts } = this.state;\r\n    const lowercasedFilter = filteredString.toLowerCase();\r\n    const filteredData = contacts.filter(item => {\r\n      return Object.keys(item).some(key =>\r\n        typeof item[key] === \"string\" && item[key].toLowerCase().includes(lowercasedFilter)\r\n        );\r\n    });\r\n\r\n    const people_list = [\r\n      {\r\n        PersonType: '1',\r\n        PersonDescription: 'Student'\r\n      },\r\n      {\r\n        PersonType: '2',\r\n        PersonDescription: 'Alumni'\r\n      },\r\n      {\r\n        PersonType: '3',\r\n        PersonDescription: 'Lecturer'\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Table className='mt-4' striped bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ContactID</th>\r\n              <th>FirstName</th>\r\n              <th>LastName</th>\r\n              <th>ContactType</th>\r\n              <th>PhoneNumber</th>\r\n              <th>Email</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map(_cntct => (\r\n              <tr key={_cntct.ContactID}>\r\n                <td>{_cntct.ContactID}</td>\r\n                <td>{_cntct.FirstName}</td>\r\n                <td>{_cntct.LastName}</td>\r\n                <td>{this.getPersonDesc(_cntct.ContactType, people_list)}</td>\r\n                <td>{_cntct.PhoneNumber}</td>\r\n                <td>{_cntct.Email}</td>\r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      className='mr-2'\r\n                      variant='dark'\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          editModalShow: true,\r\n                          _contactid: _cntct.ContactID,\r\n                          _firstname: _cntct.FirstName,\r\n                          _lastname: _cntct.LastName,\r\n                          _contacttypedesc: this.getPersonDesc(\r\n                            _cntct.ContactType,\r\n                            people_list\r\n                          ),\r\n                          _phonenumber: _cntct.PhoneNumber,\r\n                          _email: _cntct.Email,\r\n                          _disablefields: true , \r\n                          _faculty: _cntct.Faculty ,\r\n                          _subject: _cntct.Subject , \r\n                          _graduationyear: _cntct.GraduationYear\r\n                          // we need to pass the params above , below\r\n                        })\r\n                      }\r\n                    >\r\n                      View\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className='mr-2'\r\n                      variant='info'\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          editModalShow: true,\r\n                          _contactid: _cntct.ContactID,\r\n                          _firstname: _cntct.FirstName,\r\n                          _lastname: _cntct.LastName,\r\n                          _contacttypedesc: this.getPersonDesc(\r\n                            _cntct.ContactType,\r\n                            people_list\r\n                          ),\r\n                          _phonenumber: _cntct.PhoneNumber,\r\n                          _email: _cntct.Email,\r\n                          _disablefields: 'false' , \r\n                          _faculty: _cntct.Faculty ,\r\n                          _subject: _cntct.Subject , \r\n                          _graduationyear: _cntct.GraduationYear\r\n                          // we need to pass the params above , below\r\n                        })\r\n                      }\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n\r\n                    <Button\r\n                      className='mr-2'\r\n                      onClick={() => this.deleteEmp(_cntct.ContactID)}\r\n                      variant='danger'\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <EditContactModal\r\n                      show={this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                      contactid={_contactid}\r\n                      firstname={_firstname}\r\n                      lastname={_lastname}\r\n                      contacttype={_contacttypedesc}\r\n                      phonenumber={_phonenumber}\r\n                      email={_email}\r\n                      disablefields={_disablefields}\r\n                      graduationyear={_graduationyear} \r\n                      subject={_subject} \r\n                      faculty={_faculty}\r\n                    />\r\n                  </ButtonToolbar>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n  \r\n     \r\n        <ButtonToolbar>\r\n    \r\n          <Button\r\n            variant='primary'\r\n            onClick={() => this.setState({ addModalShow: true })}\r\n          >\r\n            Add Contact\r\n          </Button>\r\n\r\n          <MDBCol md=\"6\">\r\n              <MDBFormInline className=\"md-form\">\r\n              <input value={this.state.filteredString} \r\n                              onChange={this.handleChange} \r\n                              className=\"form-control form-control-sm w-75\" \r\n                              type=\"text\" \r\n                              placeholder=\"Search for anything\" aria-label=\"Search\" />\r\n              \r\n              </MDBFormInline>\r\n          </MDBCol>\r\n                  \r\n          <AddContactModal\r\n            show={this.state.addModalShow}\r\n            onHide={addModalClose}\r\n          />\r\n        </ButtonToolbar>\r\n        \r\n        <br />        \r\n     \r\n    \r\n\r\n        {/* <MDBInput hint=\"Search For Anything\" value={this.state.filteredString} onChange={this.handleChange} type=\"text\" containerClass=\"active-pink active-pink-2 mt-0 mb-3\" /> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ filteredString: event.target.value });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}