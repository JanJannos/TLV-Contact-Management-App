{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development-T410\\\\WEB API + Angular 8 + React\\\\Code\\\\TLV-React-WEB-API\\\\ReactTLV\\\\src\\\\components\\\\AddContactModal.js\";\n\n/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nexport class AddContactModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false,\n        person: ''\n      });\n    };\n\n    this.handlePersonChange = e => {\n      this.setState({\n        person: e.target.value\n      });\n    };\n\n    this.state = {\n      deps: [],\n      snackbaropen: false,\n      snackbarmsg: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {} // fetch('http://localhost:54178/api/department')\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     this.setState({ deps: data });\n  //   });\n  // This function makes sure to hide the Popup\n\n\n  // Execute the SAVE function\n  handleSubmit(event) {\n    event.preventDefault(); // prevent from submitting the page\n\n    if (event.target.PersonType.value.tol === '') fetch('http://localhost:54178/api/contact/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ContactID: null,\n        FirstName: event.target.FirstName.value,\n        LastName: event.target.LastName.value,\n        PhoneNumber: event.target.PhoneNumber.value,\n        Email: event.target.Email.value,\n        ContactType: event.target.PersonType.value,\n        Notes: event.target.Faculty !== undefined ? event.target.Faculty.value : event.target.GraduationYear !== undefined ? event.target.GraduationYear.value : event.target.Subject !== undefined ? event.target.Subject.value : ''\n      })\n    }).then(resp => resp.json()).then(result => {\n      // SUCCESS : alert(result);\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: result\n      });\n    }, // FAIL : alert('Failed')\n    error => this.setState({\n      snackbaropen: true,\n      snackbarmsg: 'Failed!'\n    }));\n  }\n\n  renderSpecificColumns(type) {\n    // eslint-disable-next-line default-case\n    switch (type) {\n      case 'Student':\n        return React.createElement(Form.Group, {\n          controlId: \"Faculty\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Faculty\"), React.createElement(Form.Control, {\n          type: \"Faculty\",\n          name: \"Faculty\",\n          required: true,\n          placeholder: \"Faculty\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n\n      case 'Alumni':\n        return React.createElement(Form.Group, {\n          controlId: \"Graduation Year\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Graduation Year\"), React.createElement(Form.Control, {\n          type: \"text\",\n          name: \"GraduationYear\",\n          required: true,\n          placeholder: \"Graduation Year\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n\n      case 'Lecturer':\n        return React.createElement(Form.Group, {\n          controlId: \"Subject\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Subject\"), React.createElement(Form.Control, {\n          type: \"Subject\",\n          name: \"Subject\",\n          required: true,\n          placeholder: \"Subject\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }));\n    }\n  }\n\n  render() {\n    const people_list = [{\n      PersonType: '0',\n      PersonDescription: 'Choose Person Type'\n    }, {\n      PersonType: '1',\n      PersonDescription: 'Student'\n    }, {\n      PersonType: '2',\n      PersonDescription: 'Alumni'\n    }, {\n      PersonType: '3',\n      PersonDescription: 'Lecturer'\n    }];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: this.state.snackbaropen,\n      autoHideDuration: 3000,\n      onClose: this.snackbarClose,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.snackbarmsg),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"arial-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.snackbarClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"x\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Add Contact\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"FirstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"FirstName\",\n      required: true,\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"LastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"LastName\",\n      required: true,\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"PersonType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Person Type\"), React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: \"Choose Person Type\",\n      onChange: this.handlePersonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, people_list.map(ptype => React.createElement(\"option\", {\n      key: ptype.PersonType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, ptype.PersonDescription)))), React.createElement(Form.Group, {\n      controlId: \"PhoneNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Form.Control, {\n      type: \"Phone\",\n      name: \"PhoneNumber\",\n      required: true,\n      placeholder: \"PhoneNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      type: \"Email\",\n      name: \"Email\",\n      required: true,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), this.renderSpecificColumns(this.state.person), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Add Contact\")))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.props.onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Development-T410\\WEB API + Angular 8 + React\\Code\\TLV-React-WEB-API\\ReactTLV\\src\\components\\AddContactModal.js"],"names":["React","Component","Modal","Button","Row","Col","Form","Snackbar","IconButton","AddContactModal","constructor","props","snackbarClose","event","setState","snackbaropen","person","handlePersonChange","e","target","value","state","deps","snackbarmsg","handleSubmit","bind","componentDidMount","preventDefault","PersonType","tol","fetch","method","headers","Accept","body","JSON","stringify","ContactID","FirstName","LastName","PhoneNumber","Email","ContactType","Notes","Faculty","undefined","GraduationYear","Subject","then","resp","json","result","error","renderSpecificColumns","type","render","people_list","PersonDescription","vertical","horizontal","map","ptype","onHide"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-constructor */\r\nimport React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddContactModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { deps: [], snackbaropen: false, snackbarmsg: '' };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // fetch('http://localhost:54178/api/department')\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //     this.setState({ deps: data });\r\n    //   });\r\n  }\r\n\r\n  // This function makes sure to hide the Popup\r\n  snackbarClose = event => {\r\n    this.setState({ snackbaropen: false, person: '' });\r\n  };\r\n\r\n  // Execute the SAVE function\r\n  handleSubmit(event) {\r\n    event.preventDefault(); // prevent from submitting the page\r\n    \r\n\r\n    if (event.target.PersonType.value.tol === '')\r\n\r\n\r\n    fetch('http://localhost:54178/api/contact/', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        ContactID: null,\r\n        FirstName: event.target.FirstName.value,\r\n        LastName: event.target.LastName.value,\r\n        PhoneNumber: event.target.PhoneNumber.value,\r\n        Email: event.target.Email.value,\r\n        ContactType: event.target.PersonType.value,\r\n        Notes: event.target.Faculty !== undefined ? event.target.Faculty.value : \r\n                  event.target.GraduationYear !== undefined ? event.target.GraduationYear.value :\r\n                    event.target.Subject !== undefined ? event.target.Subject.value : ''\r\n      })\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(\r\n        result => {\r\n          // SUCCESS : alert(result);\r\n          this.setState({ snackbaropen: true, snackbarmsg: result });\r\n        },\r\n        // FAIL : alert('Failed')\r\n        error => this.setState({ snackbaropen: true, snackbarmsg: 'Failed!' })\r\n      );\r\n  }\r\n\r\n  handlePersonChange = e => {    \r\n    this.setState({ person: e.target.value });\r\n  };\r\n\r\n  renderSpecificColumns(type) {\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n      case 'Student':\r\n        return (\r\n          <Form.Group controlId='Faculty'>\r\n            <Form.Label>Faculty</Form.Label>\r\n            <Form.Control\r\n              type='Faculty'\r\n              name='Faculty'\r\n              required\r\n              placeholder='Faculty'\r\n            />\r\n          </Form.Group>\r\n        );\r\n\r\n      case 'Alumni':\r\n        return (\r\n          <Form.Group controlId='Graduation Year'>\r\n            <Form.Label>Graduation Year</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              name='GraduationYear'\r\n              required\r\n              placeholder='Graduation Year'\r\n            />\r\n          </Form.Group>\r\n        );\r\n      case 'Lecturer':\r\n        return (\r\n          <Form.Group controlId='Subject'>\r\n            <Form.Label>Subject</Form.Label>\r\n            <Form.Control\r\n              type='Subject'\r\n              name='Subject'\r\n              required\r\n              placeholder='Subject'\r\n            />\r\n          </Form.Group>\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const people_list = [\r\n      {\r\n        PersonType: '0',\r\n        PersonDescription: 'Choose Person Type'\r\n      },\r\n      {\r\n        PersonType: '1',\r\n        PersonDescription: 'Student'\r\n      },\r\n      {\r\n        PersonType: '2',\r\n        PersonDescription: 'Alumni'\r\n      },\r\n      {\r\n        PersonType: '3',\r\n        PersonDescription: 'Lecturer'\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className='container'>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={3000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id='message-id'>{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key='close'\r\n              arial-label='Close'\r\n              color='inherit'\r\n              onClick={this.snackbarClose}\r\n            >\r\n              x\r\n            </IconButton>\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size='lg'\r\n          aria-labelledby='contained-modal-title-vcenter'\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='contained-modal-title-vcenter'>\r\n              Add Contact\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  {/* FirstName */}\r\n                  <Form.Group controlId='FirstName'>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='FirstName'\r\n                      required\r\n                      placeholder='First Name'\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* LastName */}\r\n                  <Form.Group controlId='LastName'>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='LastName'\r\n                      required\r\n                      placeholder='Last Name'\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* Person Type */}\r\n                  <Form.Group controlId='PersonType'>\r\n                    <Form.Label>Person Type</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      defaultValue='Choose Person Type'\r\n                      onChange={this.handlePersonChange}\r\n                    >\r\n                      {people_list.map(ptype => (\r\n                        <option key={ptype.PersonType}>\r\n                          {ptype.PersonDescription}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  {/* PhoneNumber */}\r\n                  <Form.Group controlId='PhoneNumber'>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      type='Phone'\r\n                      name='PhoneNumber'\r\n                      required\r\n                      placeholder='PhoneNumber'\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* Email */}\r\n                  <Form.Group controlId='Email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                      type='Email'\r\n                      name='Email'\r\n                      required\r\n                      placeholder='Email'\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* Optional Fields */}\r\n                  {this.renderSpecificColumns(this.state.person)}\r\n\r\n                  <Form.Group>\r\n                    <Button variant='primary' type='submit'>\r\n                      Add Contact\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant='danger' onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}